<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.3.xsd
            http://www.springframework.org/schema/cache 
            http://www.springframework.org/schema/cache/spring-cache.xsd
            http://code.alibabatech.com/schema/dubbo        
            http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
 
    <!-- 提供方应用信息，用于计算依赖关系 -->
    <dubbo:application name="count-large-app"  />
 
    <!-- 使用multicast广播注册中心暴露服务地址 -->
    <dubbo:registry address="multicast://224.5.6.7:1234" />
 
    <!-- 用dubbo协议在20880端口暴露服务 -->
    <dubbo:protocol name="dubbo" port="20880" />
 
    <!-- 声明需要暴露的服务接口 -->
    <dubbo:service interface="dubbo_service_cache.DemoService" ref="demoService" />
 
    <!-- 和本地bean一样实现服务 -->
    <bean id="demoService" class="dubbo_service_cache.DemoServiceImpl" />
    
    <!-- 
    <context:annotation-config /> 
    <bean class="dubbo_service_cache.CacheConfig"/>
     -->
    
   	<!-- spring缓存配置 -->
	<cache:annotation-driven />
	<!-- 使用ehcache -->
	<bean id="ehcacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager"  >
		<property name="cacheManager" ref="ehcacheManagerFactoryBean" ></property>
	</bean>
	<bean id="ehcacheManagerFactoryBean" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"  >
		<property name="configLocation" value="classpath:ehcache.xml"></property>
	</bean>
	
	<!-- 使用Redis缓存 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="localhost"></property>
        <property name="port" value="6379"></property>
        <property name="usePool" value="true"></property>
    </bean>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" ></property>
    </bean>
    <bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg index="0" ref="redisTemplate" ></constructor-arg>
    </bean>
	
	
	<bean id="cacheManager" class="org.springframework.cache.support.CompositeCacheManager">
	    <property name="cacheManagers">
	        <list>
	            <ref bean="redisCacheManager"/>
	        </list>
	    </property>
	    <!-- 都找不到时，不返回null，而是返回NOP的Cache -->
	    <property name="fallbackToNoOpCache" value="true"/>
	</bean>
 
</beans>